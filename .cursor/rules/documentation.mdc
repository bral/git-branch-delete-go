## Documentation Maintenance

When making changes to the codebase, follow these documentation rules:

1. README Accuracy
   - Verify each feature listed in README matches implementation
   - Remove or mark as "planned" any unimplemented features
   - Update command examples to match current CLI interface
   - Keep installation instructions current
   - Update configuration examples to match supported options

2. Godoc Comments
   - All exported types must have godoc comments
   - All exported functions must have godoc comments with:
     - Description of functionality
     - Parameter descriptions
     - Return value descriptions
     - Error conditions
     - Usage examples if complex
   - Use consistent formatting:
     ```go
     // FunctionName does something specific.
     // Parameters:
     //   - param1: description
     //   - param2: description
     //
     // Returns:
     //   - type: description
     //
     // Returns an error if:
     //   - condition 1
     //   - condition 2
     ```

3. Command Documentation
   - Each cobra command must have:
     - Short description (one line)
     - Long description (detailed usage)
     - Example commands
     - Flag descriptions
   - Examples must be tested and working

4. Configuration Documentation
   - Keep config file examples in sync with internal/config
   - Document all supported environment variables
   - Mark deprecated options
   - Include type information for each setting

5. Documentation Review
   Before committing:
   - Run all README examples to verify they work
   - Check godoc formatting with `go doc`
   - Verify config examples are valid
   - Update changelog if public interfaces change

6. Changelog
   - Add significant changes to CHANGELOG.md
   - Follow Keep a Changelog format
   - Include:
     - Added features
     - Changed behaviors
     - Deprecated features
     - Removed features
     - Fixed bugs
     - Security updates

This rule should be applied to:
- *.go
- *.md
- *.yaml
- *.toml
- *.json
